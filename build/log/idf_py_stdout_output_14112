[1/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\michc\Desktop\SPE-LAN8651\build\bootloader\esp-idf\esptool_py && C:\Users\michc\.espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Users/michc/esp/v5.3.1/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/michc/Desktop/SPE-LAN8651/build/bootloader/bootloader.bin"
Bootloader binary size 0x6880 bytes. 0x780 bytes (7%) free.
[2/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/callback.c.obj
[3/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
C:/Users/michc/Desktop/SPE-LAN8651/main/main.c: In function 'lan8651ReadChipId':
C:/Users/michc/Desktop/SPE-LAN8651/main/main.c:143:62: warning: passing argument 4 of 'TC6_ReadRegister' from incompatible pointer type [-Wincompatible-pointer-types]
  143 |     bool ok = TC6_ReadRegister(tc6_instance, address, false, onReadChipId, NULL);
      |                                                              ^~~~~~~~~~~~
      |                                                              |
      |                                                              void (*)(TC6_t *, _Bool,  uint32_t,  void *) {aka void (*)(TC6_t *, _Bool,  long unsigned int,  void *)}
In file included from C:/Users/michc/Desktop/SPE-LAN8651/main/main.c:1:
C:/Users/michc/Desktop/SPE-LAN8651/components/libtc6/inc/tc6.h:195:83: note: expected 'TC6_RegCallback_t' {aka 'void (*)(TC6_t *, _Bool,  long unsigned int,  long unsigned int,  void *, void *)'} but argument is of type 'void (*)(TC6_t *, _Bool,  uint32_t,  void *)' {aka 'void (*)(TC6_t *, _Bool,  long unsigned int,  void *)'}
  195 | bool TC6_ReadRegister(TC6_t *pInst, uint32_t addr, bool secure, TC6_RegCallback_t rxCallback, void *pTag);
      |                                                                 ~~~~~~~~~~~~~~~~~~^~~~~~~~~~
[4/9] Linking C static library esp-idf\main\libmain.a
[5/9] Generating ld/sections.ld
[6/9] Linking CXX executable SPE-LAN8651.elf
[7/9] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Users/michc/Desktop/SPE-LAN8651/build/SPE-LAN8651.bin
[8/9] cmd.exe /C "cd /D C:\Users\michc\Desktop\SPE-LAN8651\build\esp-idf\esptool_py && C:\Users\michc\.espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Users/michc/esp/v5.3.1/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/michc/Desktop/SPE-LAN8651/build/partition_table/partition-table.bin C:/Users/michc/Desktop/SPE-LAN8651/build/SPE-LAN8651.bin"
SPE-LAN8651.bin binary size 0x331c0 bytes. Smallest app partition is 0x100000 bytes. 0xcce40 bytes (80%) free.
[8/9] cmd.exe /C "cd /D C:\Users\michc\esp\v5.3.1\esp-idf\components\esptool_py && C:\Users\michc\.espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Users/michc/esp/v5.3.1/esp-idf -D SERIAL_TOOL=C:/Users/michc/.espressif/python_env/idf5.3_py3.11_env/Scripts/python.exe;;C:/Users/michc/esp/v5.3.1/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Users/michc/Desktop/SPE-LAN8651/build -P C:/Usersesptool.py --chip esp32 -p COM7 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 SPE-LAN8651.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port COM7
Connecting..............
Chip is ESP32-D0WDQ6 (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
WARNING: Detected crystal freq 41.01MHz is quite different to normalized freq 40MHz. Unsupported crystal in use?
Crystal is 40MHz
MAC: 3c:71:bf:44:6f:c8
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00043fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 26752 bytes to 16352...
Writing at 0x00001000... (100 %)
Wrote 26752 bytes (16352 compressed) at 0x00001000 in 0.8 seconds (effective 284.4 kbit/s)...
Hash of data verified.
Compressed 209344 bytes to 112695...
Writing at 0x00010000... (14 %)
Writing at 0x0001ce50... (28 %)
Writing at 0x00022d20... (42 %)
Writing at 0x00028baf... (57 %)
Writing at 0x0002ee61... (71 %)
Writing at 0x00037859... (85 %)
Writing at 0x0003d6f2... (100 %)
Wrote 209344 bytes (112695 compressed) at 0x00010000 in 2.8 seconds (effective 608.6 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 458.5 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
/michc/esp/v5.3.1/esp-idf/components/esptool_py/run_serial_tool.cmake"
